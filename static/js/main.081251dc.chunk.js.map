{"version":3,"sources":["serviceWorker.js","components/Navbar/Navbar.js","components/Modal/Modal.js","icons/open-exit-door.js","components/Booking/BookingForm.js","components/Booking/BookingDetails.js","components/Booking/Header.js","components/CancelAlert/CancelAlert.js","components/Booking/Report.js","constants/notification.js","components/Booking/Booking.js","components/Grid/Grid.js","components/MainContainer/MainContainer.js","index.js"],"names":["Boolean","window","location","hostname","match","HeaderNavbar","props","react_default","a","createElement","es_Navbar","bg","className","type","onClick","refreshTrueHadler","modal","Modal","show","showModal","onHide","onClose","centered","size","Header","closeButton","modalTitle","Body","children","openExitDoor","color","fill","version","id","xmlns","x","y","width","height","viewBox","style","enableBackground","d","bookingForm","bookingDetailsForm","Fragment","Form","Row","Group","as","Col","md","controlId","Control","title","placeholder","value","hotelBookingForm","firstName","name","onChange","onChanged","disabled","isEdit","disable","required","Label","lastName","rows","address","es","selected","checkIn","onSelect","event","isDate","dateFormat","placeholderText","minDate","Date","key","checkedIn","checkOut","adults","min","contactNumber","amount","advance","roomDetailsForm","rooms","map","room","index","roomType","onRoomChanged","hidden","roomTypes","i","concat","roomNumber","availableRooms","r","Button","variant","addRoom","deleteRoom","form","noValidate","validated","onSubmit","onBooked","length","open_exit_door","Footer","BookingDetails","state","payment","balance","misc","withTax","taxPercent","cardDisable","cashDisable","walletDisable","getPayment","cashPayment","_this","Number","document","getElementById","cardPayment","walletPayment","due","checkPayment","paymentTotal","generateReport","Object","objectSpread","alert","restoreAmount","setState","booking","taxCalculation","target","this","actualAmount","_this2","for","Component","header","edit","href","toggleCancelAlert","cancelAlert","showCancelAlert","cancel","Report","_ref","reportHandler","console","log","bookingId","dateFNS","format","reportGenerated","types","SUCCESS","ERROR","WARNING","INFO","messages","BOOKING_SUCCESS","BOOKING_ERROR","BOOKING_UPDATE_SUCCESS","BOOKING_CANCEL_SUCCESS","BOOKING_CHECKIN_SUCCESS","BOOKING_CHECKOUT_SUCCESS","Booking","checkedOut","formIsValid","personId","status","viewBillDetail","inputChangedHandler","updatedForm","getAvailableRooms","charAt","toUpperCase","slice","roomDetailsChangedHandler","updatedRooms","toConsumableArray","filter","axios","post","then","res","data","indexOf","_id","setDefaultRoom","catch","error","tempObj","detailsForForm","roomId","push","closeModalHandler","clearForm","element","updatedFormElement","hotelBookedHandler","preventDefault","currentTarget","bookingData","url","notification","message","checkValidity","step","notify","handleBookings","report","openBillDetailsModal","openReportGenerateModal","date","components_Booking_Report","components_Booking_BookingDetails","Booking_Header","checkOutDate","Booking_BookingForm","CancelAlert_CancelAlert","Grid","items","monthObj","bookingArray","loading","modalSize","getRandomColor","hex","String","Math","random","toString","replace","c","rgb","parseInt","substr","round","max","componentDidMount","_callee","tempArray","regenerator_default","wrap","_context","prev","next","monthNumber","getMonth","year","getYear","numberOfDays","getDaysInMonth","t0","t1","getRooms","t2","sent","t3","call","Array","finalArray","setBookingsForMonth","stop","componentDidUpdate","refresh","refreshFalseHadler","getBookings","_callee2","_context2","abrupt","_callee3","_context3","get","unshift","showRoomNumber","result","forEach","months","setBookingForMonth","setBookingForMonths","setBookedRooms","findIndex","month","bookedRoom","find","item","eachDay","dateNumber","getDate","showBooking","showModalHandler","subitem","dayOfMonth","returnNull","modalStatus","changeMonth","newMonthDate","addMonths","getNameOfMonth","renderShortName","shortName","split","setClassForCell","subitemIndex","tooltipPlacement","itemIndex","setClassForNavigatingMonth","renderOverlay","role","renderItems","OverlayTrigger","placement","overlay","Tooltip","background","fontWeight","cursor","newRow","fontSize","components_Modal_Modal","components_Booking_Booking","componentName","lib","Navbar_Navbar","components_Grid_Grid","NotificationManager","success","warning","info","ReactDOM","render","MainContainer_componentName","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.081251dc.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Navbar.css';\r\n\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nfunction HeaderNavbar(props) {\r\n    return (\r\n        <Navbar bg=\"dark\" className=\"navbar__mainContainer\">\r\n            <div>ROOM BOOKING APP</div>\r\n            <button type=\"button\" className=\"btn btn-outline-light\" onClick={() => props.refreshTrueHadler()}>REFRESH</button>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default HeaderNavbar;\r\n","import React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nimport './Modal.css';\r\n\r\nconst modal = (props) => {\r\n    return (\r\n        <Modal show={props.showModal} onHide={props.onClose} centered size={props.size}>\r\n            <Modal.Header closeButton className=\"modalTitle modal-header\">{props.modalTitle}</Modal.Header>\r\n            <Modal.Body className=\"modal__body\">\r\n                { props.children }\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n};\r\n\r\nexport default modal;","import React from 'react';\r\n\r\nconst openExitDoor = (props) => {\r\n\tlet color = props.fill;\r\n    return (\r\n\t\t<svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n\t\t\t\t\t\t\t\t\twidth={props.width} height={props.height} viewBox=\"0 0 494.239 494.238\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ enableBackground: 'new 0 0 494.239 494.238' }}>\r\n<g>\r\n\t<path fill={color} d=\"M199.725,0v36.025H85.211v421.66l114.514,0.094v36.459l209.085-37.555l0.216-418.867L199.725,0z M234.404,230.574\r\n\t\tc7.022,0,12.715,7.408,12.715,16.545c0,9.139-5.692,16.545-12.715,16.545s-12.715-7.406-12.715-16.545\r\n\t\tC221.688,237.982,227.382,230.574,234.404,230.574z M119.211,423.713V70.025h80.514v353.753L119.211,423.713z\"/>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n</svg>\r\n\r\n\t);\r\n};\r\n\r\nexport default openExitDoor;","import React from 'react';\r\nimport Svg from '../../icons/open-exit-door';\r\n\r\nimport { Button, Modal, Form, Col } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './BookingForm.css';\r\n\r\nconst bookingForm = (props) => {\r\n\r\n    const bookingDetailsForm = (\r\n        <React.Fragment>\r\n            <Form.Row>\r\n                <Form.Group as={Col} md=\"5\" controlId=\"firstName\"\r\n                    className=\"form__group display-flex\">\r\n                    <div>\r\n                        <Form.Control\r\n                            title=\"First Name\"\r\n                            type=\"text\"\r\n                            placeholder=\"First Name\"\r\n                            value={props.hotelBookingForm.firstName}\r\n                            name=\"firstName\"\r\n                            onChange={props.onChanged}\r\n                            disabled={!props.isEdit && props.disable}\r\n                            className=\"form__input valueCapitalize\"\r\n                            required />\r\n                        <Form.Label className=\"form__label\">First Name</Form.Label>\r\n                    </div>\r\n                    <span className=\"required\">*</span>\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"5\" controlId=\"lastName\"\r\n                    className=\"form__group display-flex\">\r\n                    <div>\r\n                        <Form.Control\r\n                            title=\"Last Name\"\r\n                            type=\"text\"\r\n                            placeholder=\"Last Name\"\r\n                            value={props.hotelBookingForm.lastName}\r\n                            name=\"lastName\"\r\n                            className=\"form__input valueCapitalize\"\r\n                            onChange={props.onChanged}\r\n                            disabled={!props.isEdit && props.disable}\r\n                            required />\r\n                        <Form.Label className=\"form__label\">Last Name</Form.Label>\r\n                    </div>\r\n                    <span className=\"required\">*</span>\r\n                </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n                <Form.Group as={Col} md=\"10\" controlId=\"address\"\r\n                    className=\"form__group display-flex\">\r\n                    <div>\r\n                        <Form.Control\r\n                            title=\"Address\"\r\n                            as=\"textarea\"\r\n                            rows=\"1\"\r\n                            placeholder=\"Address\"\r\n                            value={props.hotelBookingForm.address}\r\n                            name=\"address\"\r\n                            onChange={props.onChanged}\r\n                            disabled={!props.isEdit && props.disable}\r\n                            className=\"form__input\"\r\n                            required />\r\n                        <Form.Label className=\"form__label\">Address</Form.Label>\r\n                    </div>\r\n                    <span className=\"required\">*</span>\r\n                </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n                <Form.Group as={Col} md=\"5\"\r\n                    className=\"form__group display-flex\">\r\n                    <div>\r\n                        <DatePicker\r\n                            id=\"checkIn\"\r\n                            title=\"Check In\"\r\n                            selected={props.hotelBookingForm.checkIn}\r\n                            onSelect={(event) => props.onChanged({ event, name: \"checkIn\", isDate: true })}\r\n                            dateFormat=\"MMMM d, yyyy\"\r\n                            placeholderText=\"Check In\"\r\n                            minDate={new Date()}\r\n                            key=\"checkIn\"\r\n                            className=\"form__input form-control\"\r\n                            disabled={!props.isEdit && props.disable || props.checkedIn}\r\n                            required\r\n                        />\r\n                        <Form.Label className=\"form__label\">Check In</Form.Label>\r\n                    </div>\r\n                    <span className=\"required\">*</span>\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"5\" controlId=\"checkOut\"\r\n                    className=\"form__group display-flex\">\r\n                    <div>\r\n                        <DatePicker\r\n                            title=\"Check Out\"\r\n                            selected={props.hotelBookingForm.checkOut}\r\n                            onSelect={(event) => props.onChanged({ event, name: \"checkOut\", isDate: true })}\r\n                            dateFormat=\"MMMM d, yyyy\"\r\n                            placeholderText=\"Check Out\"\r\n                            minDate={props.hotelBookingForm.checkIn}\r\n                            key=\"checkOut\"\r\n                            className=\"form-control form__input\"\r\n                            disabled={!props.isEdit && props.disable}\r\n                            required\r\n                        />\r\n                        <Form.Label className=\"form__label\">CheckOut</Form.Label>\r\n                    </div>\r\n                    <span className=\"required\">*</span>\r\n                </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n                <Form.Group as={Col} md=\"3\" controlId=\"adults\"\r\n                    className=\"form__group display-flex\">\r\n                    <div>\r\n                        <Form.Control\r\n                            title=\"Adults\"\r\n                            type=\"number\"\r\n                            placeholder=\"Adults\"\r\n                            value={props.hotelBookingForm.adults}\r\n                            name=\"adults\"\r\n                            onChange={props.onChanged}\r\n                            disabled={!props.isEdit && props.disable}\r\n                            min=\"1\"\r\n                            className=\"form__input\"\r\n                            required />\r\n                        <Form.Label className=\"form__label\">Adults</Form.Label>\r\n                    </div>\r\n                    <span className=\"required\">*</span>\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"2\" controlId=\"children\"\r\n                    className=\"form__group display-flex\">\r\n                    <div>\r\n                        <Form.Control\r\n                            title=\"Children\"\r\n                            type=\"number\"\r\n                            placeholder=\"Children\"\r\n                            value={props.hotelBookingForm.children}\r\n                            name=\"children\"\r\n                            onChange={props.onChanged}\r\n                            disabled={!props.isEdit && props.disable}\r\n                            min=\"0\"\r\n                            className=\"form__input\"\r\n                            required />\r\n                        <Form.Label className=\"form__label\">Children</Form.Label>\r\n                    </div>\r\n                    <span className=\"required\">*</span>\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"5\" controlId=\"contactNumber\"\r\n                    className=\"form__group display-flex\">\r\n                    <div>\r\n                        <Form.Control\r\n                            title=\"Contact Number\"\r\n                            type=\"number\"\r\n                            placeholder=\"Contact Number\"\r\n                            value={props.hotelBookingForm.contactNumber}\r\n                            name=\"contactNumber\"\r\n                            onChange={props.onChanged}\r\n                            disabled={!props.isEdit && props.disable}\r\n                            className=\"form__input\"\r\n                            required />\r\n                        <Form.Label className=\"form__label\">Contact Number</Form.Label>\r\n                    </div>\r\n                    <span className=\"required\">*</span>\r\n                </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n                <Form.Group as={Col} md=\"5\" controlId=\"amount\"\r\n                    className=\"form__group display-flex\">\r\n                    <div>\r\n                        <Form.Control\r\n                            title=\"Room Charges\"\r\n                            type=\"number\"\r\n                            placeholder=\"Room Charges\"\r\n                            value={props.hotelBookingForm.amount}\r\n                            name=\"amount\"\r\n                            onChange={props.onChanged}\r\n                            disabled={!props.isEdit && props.disable}\r\n                            min=\"1\"\r\n                            className=\"form__input\"\r\n                            required></Form.Control>\r\n                        <Form.Label className=\"form__label\">Room Charges</Form.Label>\r\n                    </div>\r\n                    <span className=\"required\">*</span>\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"5\" controlId=\"advance\"\r\n                    className=\"form__group display-flex\">\r\n                    <div>\r\n                        <Form.Control\r\n                            title=\"Advance\"\r\n                            type=\"number\"\r\n                            placeholder=\"Advance\"\r\n                            value={props.hotelBookingForm.advance}\r\n                            name=\"advance\"\r\n                            onChange={props.onChanged}\r\n                            disabled={!props.isEdit && props.disable}\r\n                            min=\"0\"\r\n                            className=\"form__input\"\r\n                            required></Form.Control>\r\n                        <Form.Label className=\"form__label\">Advance</Form.Label>\r\n                    </div>\r\n                    <span className=\"required\">*</span>\r\n                </Form.Group>\r\n            </Form.Row>\r\n        </React.Fragment>\r\n    )\r\n\r\n    const roomDetailsForm = (\r\n        <div className=\"add-room-form\">\r\n            {\r\n                props.hotelBookingForm.rooms.map((room, index) => {\r\n                    return (\r\n                        <Form.Row key={index}>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"roomType\"\r\n                                className=\"form__group display-flex\">\r\n                                {/* <div> */}\r\n                                <Form.Control\r\n                                    as=\"select\" title=\"Room Type\"\r\n                                    value={props.hotelBookingForm.rooms[index].roomType}\r\n                                    name=\"roomType\"\r\n                                    onChange={(event) => props.onRoomChanged(event, \"roomType\", index)}\r\n                                    disabled={!props.isEdit && props.disable}\r\n                                    className=\"form__input\"\r\n                                    required >\r\n                                    <option value='' hidden>Room Type</option>\r\n                                    {props.roomTypes.map((roomType, i) => {\r\n                                        return <option key={`roomType${i}`}>{roomType}</option>\r\n                                    })}\r\n                                </Form.Control>\r\n                                {/* { index === 0 ? <Form.Label className=\"form__label\" for=\"roomType\">Room Type</Form.Label> : null } */}\r\n                                {/* </div> */}\r\n                                <span className=\"required\">*</span>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"roomNumber\"\r\n                                className=\"form__group display-flex\">\r\n                                {/* <div> */}\r\n                                <Form.Control\r\n                                    as=\"select\" title=\"Room No\"\r\n                                    value={props.hotelBookingForm.rooms[index].roomNumber}\r\n                                    name=\"roomNumber\"\r\n                                    onChange={(event) => props.onRoomChanged(event, \"roomNumber\", index)}\r\n                                    disabled={!props.isEdit && props.disable}\r\n                                    className=\"form__input\"\r\n                                    required >\r\n                                    <option value='' hidden>Room No  {room.roomNumber}</option>\r\n                                    {props.availableRooms.map((r, i) => {\r\n                                        if (r.roomType === room.roomType) {\r\n                                            return <option key={`roomNo${i}`}>{r.roomNumber}</option>\r\n                                        }\r\n                                        return null;\r\n                                    })}\r\n                                </Form.Control>\r\n                                {/* { index === 0 ? <Form.Label className=\"form__label\" for=\"roomNumber\">Room Number</Form.Label> : null } */}\r\n                                {/* </div> */}\r\n                                <span className=\"required\">*</span>\r\n                            </Form.Group>\r\n                            {index === 0 ? (\r\n                                <Form.Group as={Col} md=\"2\" className=\"icon\">\r\n                                    <Button variant=\"outline-primary\"\r\n                                        className=\"btn-no-border btn-no-border--primary addIcon\"\r\n                                        type=\"button\"\r\n                                        onClick={props.addRoom}\r\n                                        disabled={!props.isEdit && props.disable} title=\"Add Room\">\r\n                                        <i className=\"fa fa-plus pointerCursor icon-medium\"></i>\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            ) : (\r\n                                    <Form.Group as={Col} md=\"2\" className=\"icon\">\r\n                                        <Button variant=\"outline-danger\"\r\n                                            className=\"btn-no-border btn-no-border--danger deleteIcon\"\r\n                                            type=\"button\"\r\n                                            disabled={!props.isEdit && props.disable}\r\n                                            title=\"Delete\"\r\n                                            onClick={() => props.deleteRoom(index)}\r\n                                        >\r\n                                            <i className=\"fa fa-trash-o pointerCursor icon-medium\"></i>\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                )}\r\n                        </Form.Row>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n\r\n    let form = (\r\n        <Form noValidate validated={props.validated}\r\n            onSubmit={props.onBooked}\r\n            className=\"form\">\r\n            <div className=\"form__container display-flex\">\r\n                <div className=\"booking-details-form\">{bookingDetailsForm}</div>\r\n                <div className=\"separator\"></div>\r\n                {props.hotelBookingForm.rooms.length === 0 ? (\r\n                    <div className=\"room-details-form\">\r\n                        <h4>Choose Room to Book</h4>\r\n                        <Svg width=\"150px\" height=\"100px\" fill=\"#ced4da\" className=\"svg-icon\" />\r\n                    </div>\r\n                ) :\r\n                    roomDetailsForm}\r\n            </div>\r\n            <Modal.Footer className=\"modal-footer\">\r\n                <Button variant=\"outline-secondary\" onClick={props.onClose}>Close</Button>\r\n                <Button variant=\"primary\" type=\"submit\" className=\"btn-submit\">Submit</Button>\r\n            </Modal.Footer>\r\n        </Form>\r\n    );\r\n    return <React.Fragment>{form}</React.Fragment>\r\n};\r\n\r\nexport default bookingForm;","import React, { Component } from 'react'\r\nimport './BookingDetails.css';\r\nimport { Form, Modal, Button } from 'react-bootstrap';\r\nclass BookingDetails extends Component {\r\n    state = {\r\n        payment: {\r\n            amount: 0,\r\n            advance: 0,\r\n            balance: 0,\r\n            misc: 0,\r\n            payment: {\r\n                withTax: false,\r\n                taxPercent: 0,\r\n            }\r\n        },\r\n        cardDisable: true,\r\n        cashDisable: true,\r\n        walletDisable: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            payment: {\r\n                ...this.state.payment,\r\n                actualAmount: Number(this.props.booking.amount),\r\n                amount: Number(this.props.booking.amount),\r\n                advance: Number(this.props.booking.advance),\r\n                balance: (Number(this.props.booking.amount) + this.state.payment.misc) - Number(this.props.booking.advance)\r\n            }\r\n        });\r\n    }\r\n\r\n    getPayment = () => {\r\n        const payment = {\r\n            cashPayment: !this.state.cashDisable ? Number(document.getElementById('cash_input').value) : 0,\r\n            cardPayment: !this.state.cardDisable ? Number(document.getElementById('card_input').value) : 0,\r\n            walletPayment: !this.state.walletDisable ? Number(document.getElementById('wallet_input').value) : 0,\r\n            due: 0\r\n        }\r\n\r\n        this.checkPayment(payment);\r\n    }\r\n\r\n    checkPayment = (payment) => {\r\n        const paymentTotal = payment.cashPayment + payment.cardPayment + payment.walletPayment;\r\n        if (paymentTotal >= this.state.payment.balance && paymentTotal <= this.state.payment.balance + 100) {\r\n            payment.due = paymentTotal - this.state.payment.balance;\r\n\r\n            this.props.generateReport({ ...this.state, payment: { ...this.state.payment, payment: { ...this.state.payment.payment, payment } } });\r\n        } else {\r\n            alert('Not allowed to proceed');\r\n        }\r\n    }\r\n\r\n    restoreAmount = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            payment: {\r\n                ...this.state.payment,\r\n                amount: Number(this.props.booking.amount),\r\n                advance: Number(this.props.booking.advance),\r\n                balance: (Number(this.props.booking.amount) + this.state.payment.misc) - Number(this.props.booking.advance),\r\n                payment: {\r\n                    ...this.state.payment.payment,\r\n                    withTax: false\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    taxCalculation = () => {\r\n        let taxPercent, amount;\r\n\r\n        if (this.state.payment.amount > 0 && this.state.payment.amount <= 2000) {\r\n            taxPercent = 3;\r\n        } else if (this.state.payment.amount > 2000 && this.state.payment.amount <= 5000) {\r\n            taxPercent = 10;\r\n        } else if (this.state.payment.amount > 5000) {\r\n            taxPercent = 18;\r\n        }\r\n\r\n        amount = this.state.payment.amount + ((this.state.payment.amount * taxPercent) / 100);\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            payment: {\r\n                ...this.state.payment,\r\n                amount,\r\n                balance: ((amount + this.state.payment.misc) - this.state.payment.advance),\r\n                payment: {\r\n                    ...this.state.payment.payment,\r\n                    taxPercent: taxPercent,\r\n                    withTax: true\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    onChange = (event) => {\r\n        if (event.target.id === \"card\") {\r\n            this.setState({ cardDisable: !this.state.cardDisable });\r\n            document.getElementById('card_input').value = null;\r\n        } else if (event.target.id === \"cash\") {\r\n            this.setState({ cashDisable: !this.state.cashDisable });\r\n            document.getElementById('cash_input').value = null;\r\n        } else if (event.target.id === \"wallet\") {\r\n            this.setState({ walletDisable: !this.state.walletDisable });\r\n            document.getElementById('wallet_input').value = null;\r\n        } else if (event.target.id === \"withTax\") {\r\n            this.taxCalculation();\r\n        } else if (event.target.id === \"withoutTax\") {\r\n            this.restoreAmount();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <React.Fragment>\r\n            <div className=\"taxInfo\">\r\n                <div className=\"taxInfo__container\">\r\n                    <div className=\"taxInfo__radio-group\">\r\n                        <input type=\"radio\" className=\"taxInfo__radio-input\" id=\"withTax\" name=\"taxInfo\" onChange={(event) => this.onChange(event)} />\r\n                        <label for=\"withTax\" className=\"taxInfo__radio-label\">\r\n                            <span className=\"taxInfo__radio-button\"></span>\r\n                            With Tax\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"taxInfo__radio-group\">\r\n                        <input type=\"radio\" className=\"taxInfo__radio-input\" id=\"withoutTax\" name=\"taxInfo\" onChange={(event) => this.onChange(event)} />\r\n                        <label for=\"withoutTax\" className=\"taxInfo__radio-label\">\r\n                            <span className=\"taxInfo__radio-button\"></span>\r\n                            Without Tax\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"bookingDetails__container\">\r\n                <div className=\"bookingDetails__info\">\r\n                    <div className=\"bookingDetails__row\">\r\n                        <span className=\"bookingDetails__left\">Room Charges</span>\r\n                        <span className=\"bookingDetails__colon\">:</span>\r\n                        <span className=\"bookingDetails__right\">{this.state.payment.amount}</span>\r\n                    </div>\r\n                    <div className=\"bookingDetails__row\">\r\n                        <span className=\"bookingDetails__left\">Advance</span>\r\n                        <span className=\"bookingDetails__colon\">:</span>\r\n                        <span className=\"bookingDetails__right\">{this.state.payment.advance}</span>\r\n                    </div>\r\n                    <div className=\"bookingDetails__row\">\r\n                        <span className=\"bookingDetails__left\">Other Charges</span>\r\n                        <span className=\"bookingDetails__colon\">:</span>\r\n                        <span className=\"bookingDetails__right\">{this.state.payment.misc}</span>\r\n                    </div>\r\n                    <div className=\"bookingDetails__row\">\r\n                        <span className=\"bookingDetails__left\">Balance</span>\r\n                        <span className=\"bookingDetails__colon\">:</span>\r\n                        <span className=\"bookingDetails__right\">{this.state.payment.balance}</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"bookingDetails__hr\"></div>\r\n\r\n                <div className=\"bookingDetails__payment\">\r\n                    <div className=\"bookingDetails__row\">\r\n                        <div>\r\n                            <input type=\"checkbox\" id=\"cash\" className=\"bookingDetails__input\" onChange={(event) => this.onChange(event)} />\r\n                            <label for=\"cash\" className=\"bookingDetails__label\">\r\n                                <span className=\"bookingDetails__checkbox\"></span>\r\n                                <span>Cash Payment</span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <Form.Control type=\"number\" id=\"cash_input\" placeholder=\"Amount\" className=\"bookingDetails__formInput\" disabled={this.state.cashDisable} />\r\n                    </div>\r\n\r\n                    <div className=\"bookingDetails__row\">\r\n                        <div>\r\n                            <input type=\"checkbox\" id=\"card\" className=\"bookingDetails__input\" onChange={(event) => this.onChange(event)} />\r\n                            <label for=\"card\" className=\"bookingDetails__label\">\r\n                                <span className=\"bookingDetails__checkbox\"></span>\r\n                                <span>Card Payment</span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <Form.Control type=\"number\" id=\"card_input\" placeholder=\"Amount\" className=\"bookingDetails__formInput\" disabled={this.state.cardDisable} />\r\n                    </div>\r\n\r\n                    <div className=\"bookingDetails__row\">\r\n                        <div>\r\n                            <input type=\"checkbox\" id=\"wallet\" className=\"bookingDetails__input\" onChange={(event) => this.onChange(event)} />\r\n                            <label for=\"wallet\" className=\"bookingDetails__label\">\r\n                                <span className=\"bookingDetails__checkbox\"></span>\r\n                                <span>Wallet Payment</span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <Form.Control type=\"number\" id=\"wallet_input\" placeholder=\"Amount\" className=\"bookingDetails__formInput\" disabled={this.state.walletDisable} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={() => this.getPayment()}>Generate Report</Button>\r\n            </Modal.Footer>\r\n        </React.Fragment>\r\n    }\r\n}\r\n\r\nexport default BookingDetails;\r\n","import React from 'react';\r\nimport Svg from '../../icons/open-exit-door';\r\n\r\nimport './Header.css';\r\nimport dateFNS from 'date-fns';\r\n\r\nconst header = (props) => (\r\n    <nav className=\"navigation\">\r\n        <ul className=\"navigation__list\">\r\n            <li className=\"navigation__item\"\r\n                title=\"Edit\" onClick={props.edit}>\r\n                <span className=\"icon_container\">\r\n                    <i className=\"fa fa-pencil icon\"></i>\r\n                </span>\r\n                <a href=\"#\" className=\"navigation__link\">Edit</a>\r\n            </li>\r\n            {/* && dateFNS.format(new Date(), 'MM/DD/YYYY') === dateFNS.format(new Date(props.checkOutDate), 'MM/DD/YYYY' )*/}\r\n            {props.checkedIn ? (\r\n                <li className=\"navigation__item\"\r\n                    title=\"Check Out\" onClick={props.checkOut}>\r\n                    <span className=\"icon_container\">\r\n                        <Svg width=\"20px\" height=\"20px\" fill=\"black\" />\r\n                    </span>\r\n                    <a href=\"#\" className=\"navigation__link\">Check Out</a>\r\n                </li>\r\n            ) : (\r\n                    <React.Fragment>\r\n                        <li className=\"navigation__item\"\r\n                            title=\"Cancel\" onClick={props.toggleCancelAlert}>\r\n                            <span className=\"icon_container\">\r\n                                <i className=\"fa fa-close icon\"></i>\r\n                            </span>\r\n                            <a href=\"#\" className=\"navigation__link\">Cancel Booking</a>\r\n                        </li>\r\n                        <li className=\"navigation__item\"\r\n                            title=\"Check In\" onClick={props.checkIn}>\r\n                            <span className=\"icon_container\">\r\n                                <i className=\"fa fa-bed icon\"></i>\r\n                            </span>\r\n                            <a href=\"#\" className=\"navigation__link\">Check In</a>\r\n                        </li>\r\n                    </React.Fragment>\r\n                )}\r\n        </ul>\r\n    </nav>\r\n);\r\n\r\nexport default header;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport './CancelAlert.css';\r\n\r\nconst cancelAlert = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            { props.showCancelAlert ? (\r\n            <div className=\"alert-box\" id=\"alert-box\">\r\n            <div className=\"alert-box__content\">\r\n                <span className=\"alert-icon__box\">\r\n                    <i className=\"fa fa-times-circle pointerCursor alert-icon\"></i>\r\n                </span>\r\n                <div className=\"alert-box__message\">\r\n                    <p>Are you sure you want to cancel the Booking</p>\r\n                </div>\r\n                <div className=\"alert-box__button\">\r\n                    <Button\r\n                        variant=\"outline-secondary\"\r\n                        className=\"alert-box-close-btn alert-box-btn\"\r\n                        onClick={props.toggleCancelAlert}>No, I don't want to cancel.\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"danger\" type=\"submit\"\r\n                        className=\"alert-box-confirm-btn alert-box-btn\"\r\n                        onClick={props.cancel}>\r\n                        Yes, I want to cancel it.\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        ) : null }\r\n        </React.Fragment>\r\n\r\n    );\r\n};\r\n\r\nexport default cancelAlert;","import React from 'react'\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport './Report.css';\r\nimport dateFNS from 'date-fns';\r\n\r\nconst Report = ({ booking, reportHandler }) => {\r\n    console.log('I am Here ', booking);\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"report__container\">\r\n                <div className=\"report__section\">\r\n                    <div className=\"report-row\">\r\n                        <span className=\"report-key\">Booking Id</span>\r\n                        <span className=\"report-value\">{booking.bookingId}</span>\r\n                    </div>\r\n                    <div className=\"report-row\">\r\n                        <span className=\"report-key\">Booking Date</span>\r\n                        <span className=\"report-value\"></span>\r\n                    </div>\r\n                    <div className=\"report-row\">\r\n                        <span className=\"report-key\">Hotel Name</span>\r\n                        <span className=\"report-value\">Delight Hotel</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"report__section\">\r\n                    <div className=\"report-row\">\r\n                        <span className=\"report-key\">Name</span>\r\n                        <span className=\"report-value\">Mr. {booking.hotelBookingForm.firstName} {booking.hotelBookingForm.lastName}</span>\r\n                    </div>\r\n                    <div className=\"report-row\">\r\n                        <span className=\"report-key\">Contact Number</span>\r\n                        <span className=\"report-value\">{booking.hotelBookingForm.contactNumber}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"report__section\">\r\n                    <div className=\"report-row\">\r\n                        <span className=\"report-key\">Check In</span>\r\n                        <span className=\"report-value\">{dateFNS.format(booking.hotelBookingForm.checkIn, 'MM/DD/YYYY')}</span>\r\n                    </div>\r\n                    <div className=\"report-row\">\r\n                        <span className=\"report-key\">Check In Time</span>\r\n                        <span className=\"report-value\"></span>\r\n                    </div>\r\n                    <div className=\"report-row\">\r\n                        <span className=\"report-key\">Check Out</span>\r\n                        <span className=\"report-value\">{dateFNS.format(booking.hotelBookingForm.checkOut, 'MM/DD/YYYY')}</span>\r\n                    </div>\r\n                    <div className=\"report-row\">\r\n                        <span className=\"report-key\">Check Out Time</span>\r\n                        <span className=\"report-value\"></span>\r\n                    </div>\r\n                    <div className=\"report-row\">\r\n                        <span className=\"report-key\">No of Rooms</span>\r\n                        <span className=\"report-value\"></span>\r\n                    </div>\r\n                    <div className=\"report-row\">\r\n                        <span className=\"report-key\">No of Guests</span>\r\n                        <span className=\"report-value\"></span>\r\n                    </div>\r\n                    <div className=\"report-row\">\r\n                        <span className=\"report-key\">No of Nights</span>\r\n                        <span className=\"report-value\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"report__section\">\r\n                    <div className=\"report-row\">\r\n                        <span className=\"report-key\">Amount</span>\r\n                        <span className=\"report-value\">{booking.payment.actualAmount}</span>\r\n                    </div>\r\n                    <div className=\"report-row\">\r\n                        <span className=\"report-key\">Tax</span>\r\n                        <span className=\"report-value\">{booking.payment.payment.taxPercent + '%'}</span>\r\n                    </div>\r\n                    <div className=\"report-row\">\r\n                        <span className=\"report-key\">Total</span>\r\n                        <span className=\"report-value\">{booking.payment.amount}</span>\r\n                    </div>\r\n                    <div className=\"report-row\">\r\n                        <span className=\"report-key\">Advance</span>\r\n                        <span className=\"report-value\">{booking.payment.advance}</span>\r\n                    </div>\r\n                    <div className=\"report-row\">\r\n                        <span className=\"report-key\">Balance</span>\r\n                        <span className=\"report-value\">{booking.payment.balance}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"report__section\">\r\n                    {booking.payment.payment.payment.cashPayment !== 0 ? <div className=\"report-row\">\r\n                        <span className=\"report-key\">Paid By Cash</span>\r\n                        <span className=\"report-value\">{booking.payment.payment.payment.cashPayment}</span>\r\n                    </div> : null}\r\n                    {booking.payment.payment.payment.cardPayment !== 0 ? <div className=\"report-row\">\r\n                        <span className=\"report-key\">Paid By Card</span>\r\n                        <span className=\"report-value\">{booking.payment.payment.payment.cardPayment}</span>\r\n                    </div> : null}\r\n                    {booking.payment.payment.payment.walletPayment !== 0 ? <div className=\"report-row\">\r\n                        <span className=\"report-key\">Paid By Wallet</span>\r\n                        <span className=\"report-value\">{booking.payment.payment.payment.walletPayment}</span>\r\n                    </div> : null}\r\n                </div>\r\n                {/* <div className=\"report__section\">\r\n                    {booking.hotelBookingForm.rooms.map(() => {\r\n                        <React.Fragment>\r\n                            <div className=\"report-row\">\r\n                                <span className=\"report-key\">Booking Id</span>\r\n                                <span className=\"report-value\">{booking.bookingId}</span>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    })}\r\n                </div> */}\r\n            </div>\r\n            <Modal.Footer>\r\n                <div className=\"report__footerContainer\">\r\n                    <Button variant=\"primary\" className=\"report__btn\">Download</Button>\r\n                    <Button variant=\"primary\" className=\"report__btn\">Print</Button>\r\n                    {\r\n                        !booking.reportGenerated ?\r\n                            <Button variant=\"primary\" className=\"report__btn\" onClick={() => reportHandler()}>Done</Button>\r\n                            : null\r\n                    }\r\n                </div>\r\n            </Modal.Footer>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Report\r\n","export const types = {\r\n    SUCCESS: 'success',\r\n    ERROR: 'error',\r\n    WARNING: 'warning',\r\n    INFO: 'info'\r\n}\r\n\r\nexport const messages = {\r\n    BOOKING_SUCCESS: 'Booking done successfully',\r\n    BOOKING_ERROR: 'Oops ! Error occurred',\r\n    BOOKING_UPDATE_SUCCESS: 'Booking updated successfully',\r\n    BOOKING_CANCEL_SUCCESS: 'Booking cancelled successfully',\r\n    BOOKING_CHECKIN_SUCCESS: 'Booking checkIn successfully',\r\n    BOOKING_CHECKOUT_SUCCESS: 'Booking checkOut successfully',\r\n    WARNING: 'warning',\r\n    INFO: 'info'\r\n}\r\n\r\nexport const notificationTimeOut = 3000;","import React, { Component } from 'react';\r\nimport BookingForm from './BookingForm';\r\nimport BookingDetails from './BookingDetails';\r\nimport Header from './Header';\r\nimport CancelAlert from '../CancelAlert/CancelAlert';\r\nimport Report from './Report';\r\n\r\nimport axios from 'axios';\r\nimport { types, messages } from '../../constants/notification';\r\n\r\nconst roomTypes = ['AC', 'Non AC', 'Deluxe', 'Suite', 'Dormitory'];\r\nclass Booking extends Component {\r\n    state = {\r\n        validated: false,\r\n        hotelBookingForm: {\r\n            firstName: '',\r\n            lastName: '',\r\n            address: '',\r\n            checkIn: '',\r\n            checkOut: '',\r\n            adults: '',\r\n            children: 0,\r\n            contactNumber: '',\r\n            rooms: [],\r\n            amount: '',\r\n            advance: ''\r\n        },\r\n        cancel: false,\r\n        checkedIn: false,\r\n        checkedOut: false,\r\n        reportGenerated: false,\r\n        availableRooms: [],\r\n        formIsValid: true,\r\n        isEdit: false,\r\n        bookingId: null,\r\n        personId: null,\r\n        disable: false,\r\n        misc: '',\r\n        balance: '',\r\n        status: '',\r\n        showCancelAlert: false,\r\n        payment: {},\r\n        viewBillDetail: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.detailsForForm.booking);\r\n        let disable = false;\r\n        if (this.props.status === 'viewBooking') {\r\n            let data = this.props.detailsForForm.booking;\r\n            let form = {\r\n                firstName: data.firstName,\r\n                lastName: data.lastName,\r\n                address: data.address,\r\n                checkIn: new Date(data.checkIn),\r\n                checkOut: new Date(data.checkOut),\r\n                adults: data.adults,\r\n                children: data.children,\r\n                contactNumber: data.contactNumber,\r\n                rooms: data.rooms,\r\n                amount: data.amount,\r\n                advance: data.advance\r\n            }\r\n\r\n            this.setState({\r\n                hotelBookingForm: form,\r\n                disable: true,\r\n                bookingId: data._id,\r\n                misc: data.misc,\r\n                balance: data.balance,\r\n                cancel: data.cancel,\r\n                checkedIn: data.checkedIn,\r\n                checkedOut: data.checkedOut,\r\n                status: this.props.status,\r\n                payment: data.payment,\r\n                reportGenerated: data.reportGenerated\r\n            });\r\n\r\n            this.getAvailableRooms(new Date(data.checkIn), new Date(data.checkOut));\r\n        } else {\r\n            let updatedForm = { ...this.state.hotelBookingForm };\r\n            updatedForm['checkIn'] = this.props.detailsForForm.date;\r\n            this.setState({\r\n                hotelBookingForm: updatedForm,\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    inputChangedHandler = (event) => {\r\n        let updatedForm = { ...this.state.hotelBookingForm };\r\n        if (event.isDate) {\r\n            updatedForm[event.name] = event.event;\r\n            this.setState({ hotelBookingForm: updatedForm });\r\n            if (event.name === 'checkIn') {\r\n                updatedForm['checkOut'] = '';\r\n                updatedForm.rooms = [];\r\n                this.setState({ hotelBookingForm: updatedForm });\r\n            }\r\n            if (event.name === 'checkOut') {\r\n                updatedForm.rooms = [];\r\n                this.setState({ hotelBookingForm: updatedForm });\r\n                this.getAvailableRooms(this.state.hotelBookingForm.checkIn, event.event);\r\n            }\r\n        }\r\n        else {\r\n            updatedForm[event.target.name] = event.target.name === 'firstName' || event.target.name === 'lastName' ? event.target.value.charAt(0).toUpperCase() + event.target.value.slice(1) : event.target.value;\r\n            this.setState({ hotelBookingForm: updatedForm });\r\n        }\r\n    }\r\n\r\n    roomDetailsChangedHandler = (event, name, index) => {\r\n        let updatedForm = { ...this.state.hotelBookingForm };\r\n        let updatedRooms = [...updatedForm.rooms];\r\n        if (event.target.name === \"roomType\") {\r\n            updatedRooms[index] = { 'roomType': event.target.value };\r\n        }\r\n        if (event.target.name === \"roomNumber\") {\r\n            updatedRooms[index] = this.state.availableRooms.filter(room => room.roomNumber === event.target.value)[0];\r\n        }\r\n        updatedForm.rooms = updatedRooms;\r\n        this.setState({ hotelBookingForm: updatedForm });\r\n    }\r\n\r\n    // get the available rooms between checkin date and checkout date\r\n    getAvailableRooms = (checkIn, checkOut) => {\r\n        if (checkOut !== '' && checkOut !== null) {\r\n            axios.post('/rooms/available', { checkIn, checkOut, bookingId: this.state.bookingId })\r\n                .then(res => {\r\n                    let availableRooms = res.data;\r\n                    let rooms = this.props.rooms.filter((room) => {\r\n                        return this.state.hotelBookingForm.rooms.indexOf(room._id) >= 0;\r\n                    });\r\n                    let updatedForm = { ...this.state.hotelBookingForm };\r\n                    updatedForm.rooms = rooms;\r\n                    availableRooms = availableRooms.concat(rooms);\r\n                    this.setState({ availableRooms, hotelBookingForm: updatedForm });\r\n                    if (this.state.hotelBookingForm.rooms.length === 0) { this.setDefaultRoom() };\r\n                }).catch(error => console.log(error));\r\n        }\r\n    }\r\n\r\n    setDefaultRoom = () => {\r\n        let tempObj;\r\n        let room = this.state.availableRooms.filter(room => room._id === this.props.detailsForForm.roomId);\r\n        room.length > 0 ? tempObj = room[0] : tempObj = this.state.availableRooms[0];\r\n        let updatedForm = { ...this.state.hotelBookingForm };\r\n        let updatedRooms = [...updatedForm.rooms];\r\n        updatedRooms.push(tempObj);\r\n        updatedForm.rooms = updatedRooms;\r\n        this.setState({ hotelBookingForm: updatedForm });\r\n    }\r\n\r\n    addRoom = () => {\r\n        let updatedForm = { ...this.state.hotelBookingForm };\r\n        let updatedRooms = [...updatedForm.rooms];\r\n        updatedRooms.push({});\r\n        updatedForm.rooms = updatedRooms;\r\n        this.setState({ hotelBookingForm: updatedForm });\r\n    }\r\n\r\n    deleteRoom = (index) => {\r\n        let updatedForm = { ...this.state.hotelBookingForm };\r\n        let rooms = [...updatedForm.rooms]\r\n        let updatedRooms = rooms.filter((room, i) => i !== index);\r\n        updatedForm.rooms = updatedRooms;\r\n        this.setState({ hotelBookingForm: updatedForm });\r\n    }\r\n\r\n    closeModalHandler = () => {\r\n        this.setState({ validated: false });\r\n        this.clearForm();\r\n        this.props.onClose();\r\n    }\r\n\r\n    clearForm = () => {\r\n        let updatedForm = { ...this.state.hotelBookingForm };\r\n        for (let element in updatedForm) {\r\n            let updatedFormElement = { ...updatedForm[element] }\r\n            if (element === 'rooms') {\r\n                updatedFormElement = [];\r\n            } else {\r\n                updatedFormElement = '';\r\n            }\r\n            updatedForm[element] = updatedFormElement;\r\n        }\r\n        this.setState({ hotelBookingForm: updatedForm });\r\n    }\r\n\r\n    hotelBookedHandler = (event) => {\r\n        event.preventDefault();\r\n        const form = event.currentTarget;\r\n        let bookingData = {};\r\n        let url = '';\r\n        let notification = '';\r\n        let message = '';\r\n        if (form.checkValidity()) {\r\n            for (let element in this.state.hotelBookingForm) {\r\n                if (element === 'rooms') {\r\n                    let rooms = this.state.hotelBookingForm[element].map(room => room._id);\r\n                    bookingData[element] = rooms;\r\n                }\r\n                else bookingData[element] = this.state.hotelBookingForm[element];\r\n            }\r\n            bookingData['cancel'] = this.state.cancel;\r\n            bookingData['checkedIn'] = this.state.checkedIn;\r\n            bookingData['checkedOut'] = this.state.checkedOut;\r\n            delete bookingData.step;\r\n            if (this.state.isEdit && this.state.disable) {\r\n                console.log('update');\r\n                url = '/bookings/update';\r\n                bookingData['_id'] = this.state.bookingId;\r\n                notification = types.SUCCESS;\r\n                message = messages.BOOKING_UPDATE_SUCCESS;\r\n            } else {\r\n                url = '/bookings/insert';\r\n                notification = types.SUCCESS;\r\n                message = messages.BOOKING_SUCCESS\r\n            }\r\n            console.log('booking data : ', bookingData);\r\n            axios.post(url, bookingData)\r\n                .then(res => {\r\n                    console.log(res.data);\r\n                    if (res.status === 200) {\r\n                        this.props.notify(notification, message);\r\n                        this.props.handleBookings();\r\n                    }\r\n                }).catch(error => {\r\n                    this.props.notify(types.ERROR, messages.BOOKING_ERROR);\r\n                    console.log(error);\r\n                });\r\n            this.props.onClose();\r\n        }\r\n        this.setState({ validated: true });\r\n    }\r\n\r\n    edit = () => {\r\n        this.setState({ isEdit: true, status: 'editBooking' });\r\n    }\r\n\r\n    toggleCancelAlert = () => {\r\n        this.setState({ showCancelAlert: !this.state.showCancelAlert });\r\n    }\r\n\r\n    cancel = () => {\r\n        this.setState({ cancel: true });\r\n        let data = {\r\n            'cancel': true,\r\n            '_id': this.state.bookingId\r\n        }\r\n        axios.post('/bookings/update', data)\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    this.props.handleBookings();\r\n                    this.props.notify(types.SUCCESS, messages.BOOKING_CANCEL_SUCCESS);\r\n                }\r\n            }).catch(error => {\r\n                this.props.notify(types.ERROR, messages.BOOKING_ERROR);\r\n                console.log(error);\r\n            });\r\n        this.setState({ showCancelAlert: false });\r\n        this.props.onClose();\r\n    }\r\n\r\n    checkIn = () => {\r\n        this.setState({ checkedIn: true });\r\n        let data = {\r\n            'checkedIn': true,\r\n            '_id': this.state.bookingId\r\n        }\r\n        axios.post('/bookings/update', data)\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    this.props.handleBookings();\r\n                    this.props.notify(types.SUCCESS, messages.BOOKING_CHECKIN_SUCCESS);\r\n                }\r\n            }).catch(error => {\r\n                this.props.notify(types.ERROR, messages.BOOKING_ERROR);\r\n                console.log(error);\r\n            });\r\n        this.props.onClose();\r\n    }\r\n\r\n    report = () => {\r\n        this.setState({ reportGenerated: true });\r\n        let data = {\r\n            'reportGenerated': true,\r\n            '_id': this.state.bookingId\r\n        }\r\n        axios.post('/bookings/update', data)\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    this.props.handleBookings();\r\n                    this.props.onClose();\r\n                }\r\n            }).catch(error => {\r\n                this.props.notify(types.ERROR, messages.BOOKING_ERROR);\r\n            });\r\n    }\r\n\r\n    checkOut = () => {\r\n        this.setState({ viewBillDetail: true });\r\n        this.props.openBillDetailsModal();\r\n    }\r\n\r\n    generateReport = (payment) => {\r\n        this.setState({ payment: payment.payment });\r\n\r\n        let data = {\r\n            'payment': payment.payment,\r\n            'checkedOut': true,\r\n            '_id': this.state.bookingId\r\n        }\r\n        axios.post('/bookings/update', data)\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    this.setState({ checkedOut: true })\r\n                    this.props.notify(types.SUCCESS, messages.BOOKING_CHECKOUT_SUCCESS);\r\n                    this.props.openReportGenerateModal();\r\n                }\r\n            }).catch(error => {\r\n                this.props.notify(types.ERROR, messages.BOOKING_ERROR);\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.hotelBookingForm.checkIn !== '' && !this.state.viewBillDetail && !this.state.checkedOut ? (\r\n                    <div>\r\n                        <Header\r\n                            edit={this.edit}\r\n                            cancel={this.cancel}\r\n                            checkIn={this.checkIn}\r\n                            checkOut={this.checkOut}\r\n                            checkedIn={this.state.checkedIn}\r\n                            checkOutDate={this.state.hotelBookingForm.checkOut}\r\n                        />\r\n                        <BookingForm\r\n                            hotelBookingForm={this.state.hotelBookingForm}\r\n                            onChanged={(event) => this.inputChangedHandler(event)}\r\n                            onRoomChanged={(event, name, index) => { this.roomDetailsChangedHandler(event, name, index) }}\r\n                            roomTypes={roomTypes}\r\n                            availableRooms={this.state.availableRooms}\r\n                            addRoom={this.addRoom}\r\n                            deleteRoom={this.deleteRoom}\r\n                            onBooked={(event) => this.hotelBookedHandler(event)}\r\n                            validated={this.state.validated}\r\n                            onClose={this.props.onClose}\r\n                            isEdit={this.state.isEdit}\r\n                            disable={this.state.disable}\r\n                        />\r\n                    </div>\r\n                ) : (<React.Fragment>\r\n                    {!this.state.checkedOut ?\r\n                        <BookingDetails booking={this.state.hotelBookingForm} generateReport={this.generateReport}></BookingDetails>\r\n                        : <Report booking={this.state} reportHandler={() => this.report()}></Report>\r\n                    }</React.Fragment>\r\n                    )}\r\n\r\n                {this.state.showCancelAlert ? <CancelAlert\r\n                    cancel={this.cancel}\r\n                    showCancelAlert={this.state.showCancelAlert}\r\n                    toggleCancelAlert={this.toggleCancelAlert} /> : null}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Booking;","import React, { Component } from 'react';\r\nimport Modal from '../Modal/Modal';\r\nimport dateFNS from 'date-fns';\r\nimport { Tooltip, OverlayTrigger, Navbar } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport './Grid.css';\r\nimport Booking from '../Booking/Booking';\r\nimport CancelAlert from '../CancelAlert/CancelAlert';\r\n\r\nclass Grid extends Component {\r\n    state = {\r\n        showModal: false,\r\n        items: [],\r\n        rooms: [],\r\n        monthObj: {},\r\n        bookingArray: [],\r\n        loading: true,\r\n        detailsForForm: {},\r\n        modalTitle: '',\r\n        modalSize: 'lg'\r\n    }\r\n\r\n    getRandomColor = () => {\r\n        var lum = -0.25;\r\n        var hex = String('#' + Math.random().toString(16).slice(2, 8).toUpperCase()).replace(/[^0-9a-f]/gi, '');\r\n        if (hex.length < 6) {\r\n            hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n        }\r\n        var rgb = \"#\",\r\n            c, i;\r\n        for (i = 0; i < 3; i++) {\r\n            c = parseInt(hex.substr(i * 2, 2), 16);\r\n            c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\r\n            rgb += (\"00\" + c).substr(c.length);\r\n        }\r\n        return rgb;\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        const date = new Date();\r\n        const monthObj = {\r\n            monthNumber: dateFNS.getMonth(date),\r\n            year: dateFNS.getYear(date),\r\n            numberOfDays: dateFNS.getDaysInMonth(date)\r\n        }\r\n\r\n        this.setState({ monthObj, rooms: (await this.getRooms()).data });\r\n\r\n        const tempArray = new Array(this.state.rooms.length);\r\n        this.finalArray(tempArray, this.state.monthObj);\r\n        this.setBookingsForMonth(this.state.monthObj);\r\n\r\n        this.setState({ modalTitle: 'Booking Details' });\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        if(this.props.refresh) {\r\n            this.handleBookings();\r\n            this.props.refreshFalseHadler();\r\n        } \r\n    }\r\n\r\n    getBookings = async (monthObj) => {\r\n        try {\r\n            return await axios.post('/bookings/filterByMonth', monthObj);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    getRooms = async () => {\r\n        try {\r\n            return await axios.get('/rooms');\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    finalArray = (tempArray, monthObj) => {\r\n        for (let i = 0; i < tempArray.length; i++) {\r\n            tempArray[i] = new Array(monthObj.numberOfDays)\r\n                .fill({\r\n                    roomNumber: this.state.rooms[i].roomNumber,\r\n                    roomId: this.state.rooms[i]._id\r\n                });\r\n            tempArray[i].unshift({ showRoomNumber: this.state.rooms[i].roomNumber });\r\n        }\r\n\r\n        this.setState({ items: tempArray });\r\n    }\r\n\r\n    // cloning = (values) => {\r\n    //     let newValues = [...values];\r\n    //     newValues.forEach((value, index) => {\r\n    //         let updatedValue = [...value];\r\n    //         updatedValue[0] = { ...updatedValue[0] };\r\n    //         newValues[index] = updatedValue;\r\n    //     });\r\n\r\n    //     return newValues;\r\n    // }\r\n\r\n\r\n    setBookingsForMonth = (monthObj) => {\r\n        this.getBookings(monthObj).then(result => {\r\n            if (result.status === 200) {\r\n                result.data.forEach(booking => {\r\n                    if (booking.months.length === 1) this.setBookingForMonth(booking);\r\n                    else if (booking.months.length > 1) this.setBookingForMonths(booking);\r\n                });\r\n                this.setState({ loading: false });\r\n            };\r\n        });\r\n    }\r\n\r\n    setBookingForMonth = (booking) => {\r\n        let color = this.getRandomColor();\r\n        let checkIn = new Date(booking.checkIn);\r\n        let checkOut = new Date(booking.checkOut);\r\n        booking.rooms.forEach(roomId => {\r\n            this.setBookedRooms(roomId, checkIn, checkOut, color, booking);\r\n        });\r\n    }\r\n\r\n    setBookingForMonths = (booking) => {\r\n        let checkIn, checkOut;\r\n        let color = this.getRandomColor();\r\n        let monthObj = this.state.monthObj;\r\n        let index = booking.months.findIndex(month => month.monthNumber === monthObj.monthNumber);\r\n\r\n        if (index === 0) {\r\n            checkIn = new Date(booking.checkIn);\r\n            checkOut = new Date(`${monthObj.monthNumber + 1}/${monthObj.numberOfDays}/${monthObj.year}`)\r\n        }\r\n\r\n        else if (index === booking.months.length - 1) {\r\n            checkIn = new Date(`${monthObj.monthNumber + 1}/1/${monthObj.year}`);\r\n            checkOut = new Date(booking.checkOut);\r\n        }\r\n\r\n        else {\r\n            checkIn = new Date(`${monthObj.monthNumber + 1}/1/${monthObj.year}`);\r\n            checkOut = new Date(`${monthObj.monthNumber + 1}/${monthObj.numberOfDays}/${monthObj.year}`);\r\n        }\r\n\r\n        booking.rooms.forEach(roomId => {\r\n            this.setBookedRooms(roomId, checkIn, checkOut, color, booking);\r\n        });\r\n    }\r\n\r\n    setBookedRooms = (roomId, checkIn, checkOut, color, booking) => {\r\n        let bookedRoom = this.state.rooms.find(room => room._id === roomId);\r\n        let items = [...this.state.items];\r\n        let item = items.find(item => item[0].showRoomNumber === bookedRoom.roomNumber);\r\n        let dates = dateFNS.eachDay(checkIn, checkOut);\r\n\r\n        dates.forEach(date => {\r\n            let dateNumber = dateFNS.getDate(date);\r\n            item[dateNumber] = {\r\n                ...item[dateNumber],\r\n                booking: booking,\r\n                showBooking: true,\r\n                name: `${booking.firstName} ${booking.lastName}`,\r\n                color\r\n            };\r\n        });\r\n\r\n        this.setState({ items });\r\n    }\r\n\r\n    showModalHandler = (subitem, dayOfMonth) => {\r\n        const monthObj = this.state.monthObj;\r\n        subitem.date = new Date(monthObj.year, monthObj.monthNumber, dayOfMonth);\r\n        this.setState({\r\n            modalSize: subitem.booking ? (subitem.booking.checkedOut ? 'md' : 'lg') : 'lg',\r\n            detailsForForm: subitem,\r\n            showModal: true\r\n        });\r\n        subitem.booking ? (subitem.booking.checkedOut ? this.openReportGenerateModal() : this.returnNull()) : this.returnNull();\r\n    }\r\n\r\n    returnNull = () => null;\r\n\r\n    closeModalHandler = () => {\r\n        this.setState({ showModal: false });\r\n    }\r\n\r\n    handleBookings = () => {\r\n        const tempArray = new Array(this.state.rooms.length);\r\n        this.finalArray(tempArray, this.state.monthObj);\r\n        this.setBookingsForMonth(this.state.monthObj);\r\n\r\n        console.log(this.state.detailsForForm.booking);\r\n    }\r\n\r\n    modalStatus = () => {\r\n        return this.state.detailsForForm.showBooking ? 'viewBooking' : 'newBooking';\r\n    }\r\n\r\n    changeMonth = (value) => {\r\n        this.setState({ loading: true });\r\n        const monthObj = { ...this.state.monthObj };\r\n        const newMonthDate = dateFNS.addMonths(new Date(monthObj.year, monthObj.monthNumber), value);\r\n        monthObj.monthNumber = dateFNS.getMonth(newMonthDate);\r\n        monthObj.numberOfDays = dateFNS.getDaysInMonth(newMonthDate);\r\n        monthObj.year = dateFNS.getYear(newMonthDate);\r\n\r\n        this.setState({ monthObj });\r\n\r\n        const tempArray = new Array(this.state.rooms.length);\r\n        this.finalArray(tempArray, monthObj);\r\n        this.setBookingsForMonth(monthObj);\r\n    }\r\n\r\n    getNameOfMonth = () => {\r\n        return dateFNS.format(new Date(this.state.monthObj.year, this.state.monthObj.monthNumber), 'MMMM').toUpperCase();\r\n    }\r\n\r\n    renderShortName = (name) => {\r\n        const shortName = name.split(' ');\r\n        return shortName[0].charAt(0) + shortName[1].charAt(0);\r\n    }\r\n\r\n    setClassForCell = (subitemIndex) => {\r\n        let date = dateFNS.getDate(new Date());\r\n        let month = dateFNS.getMonth(new Date());\r\n        return subitemIndex < date && month === this.state.monthObj.monthNumber ? 'template_subitem noselect pointerCursor disable-cell' : 'template_subitem noselect pointerCursor';\r\n    }\r\n\r\n    tooltipPlacement = (itemIndex) => {\r\n        return itemIndex === 0 || itemIndex === 1 ? 'bottom' : 'top';\r\n    }\r\n\r\n    setClassForNavigatingMonth = () => {\r\n        let month = dateFNS.getMonth(new Date());\r\n        return month === this.state.monthObj.monthNumber ? \"fa fa-chevron-left disableMonthNav\" : \"fa fa-chevron-left pointerCursor\";\r\n    }\r\n\r\n    renderOverlay = () => {\r\n        return (this.state.loading ?\r\n            <div className=\"template_overlay\">\r\n                <div className=\"template_overlay__container\">\r\n                    <div className=\"spinner-border text-light\" role=\"status\"></div>\r\n                </div>\r\n            </div>\r\n            : null)\r\n    }\r\n\r\n    openBillDetailsModal = () => {\r\n        this.setState({ modalSize: 'md', showModal: true, modalTitle: 'Bill Details' });\r\n    }\r\n\r\n    openReportGenerateModal = () => {\r\n        this.setState({ modalSize: 'md', showModal: true, modalTitle: 'Report' });\r\n    }\r\n\r\n    renderItems = () => {\r\n        let date = dateFNS.getDate(new Date());\r\n        let month = dateFNS.getMonth(new Date());\r\n        return this.state.items.map((item, itemIndex) =>\r\n            <div className=\"template_item\" key={'item' + itemIndex}>\r\n                {item.map((subitem, subitemIndex) =>\r\n                    subitem.showBooking ?\r\n                        <OverlayTrigger placement={this.tooltipPlacement(itemIndex)} key={'subitem' + subitemIndex}\r\n                            overlay={<Tooltip id={`tooltip-${this.tooltipPlacement(itemIndex)}`}>{subitem.name} {subitem.booking.checkedIn ? `- ${subitem.roomNumber}` : null}</Tooltip>}>\r\n                            <div className={this.setClassForCell(subitemIndex)} style={{ color: subitem.color, background: 'rgb(240,255,255)', fontWeight: 'bold', cursor: 'pointer' }} onClick={() => this.showModalHandler(subitem, subitemIndex)}>{this.renderShortName(subitem.name)}</div>\r\n                        </OverlayTrigger> :\r\n                        subitem.showRoomNumber ?\r\n                            <div className=\"template_subitem noselect importantCells\" key={'subitem' + subitemIndex}>{subitem.showRoomNumber}</div>\r\n                            : (subitemIndex < date && month === this.state.monthObj.monthNumber ?\r\n                                <div key={'subitem' + subitemIndex} className={\"template_subitem noselect disable-cell\"}></div>\r\n                                : <div key={'subitem' + subitemIndex} className={this.setClassForCell(subitemIndex)} onClick={() => this.showModalHandler(subitem, subitemIndex)}>\r\n                                    <div className=\"template_subitem_showOnHover\">{subitem.roomNumber}</div>\r\n                                </div>)\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let newRow = [];\r\n        if (this.state.monthObj.numberOfDays) {\r\n            newRow = new Array(this.state.monthObj.numberOfDays + 1);\r\n            for (let i = 0; i < newRow.length; i++) {\r\n                if (i !== 0) { newRow[i] = { date: i } } else { newRow[i] = {} }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"template_container\">\r\n                {this.renderOverlay()}\r\n                {this.state.monthObj.year ? <div style={{ height: '100%' }}>\r\n                    <Navbar bg='light' className=\"app__navbar\">\r\n                        <i className={this.setClassForNavigatingMonth()} onClick={() => this.changeMonth(-1)}></i>\r\n                        <div style={{ fontWeight: 'bold', fontSize: '18px' }}>{this.getNameOfMonth()} {this.state.monthObj.year}</div>\r\n                        <i className=\"fa fa-chevron-right pointerCursor\" onClick={() => this.changeMonth(1)}></i>\r\n                    </Navbar>\r\n                    <div className=\"template_item noselect\">{newRow.map((subitem) =>\r\n                        <div key={`app__${subitem.date}`} className=\"template_subitem importantCells\">\r\n                            {subitem.date < 10 ? '0' + subitem.date : subitem.date}\r\n                        </div>)}\r\n                    </div>\r\n                    <div className=\"template_item__container\">{this.renderItems()}</div>\r\n\r\n                    {/* {this.state.showModal ? <HotelBookingForm\r\n                        detailsForForm={this.state.detailsForForm}\r\n                        showModal={this.state.showModal}\r\n                        onClose={this.closeModalHandler}\r\n                        handleBookings={this.handleBookings}\r\n                        status={this.modalStatus()}\r\n                        rooms={this.state.rooms}\r\n                        notify={(notification, message) => this.props.notify(notification, message)}>\r\n                    </HotelBookingForm> : null} */}\r\n\r\n\r\n                    {this.state.showModal ? <Modal\r\n                        modalTitle={this.state.modalTitle}\r\n                        showModal={this.state.showModal}\r\n                        onClose={this.closeModalHandler}\r\n                        size={this.state.modalSize}>\r\n                        <Booking\r\n                            openReportGenerateModal={this.openReportGenerateModal}\r\n                            openBillDetailsModal={this.openBillDetailsModal}\r\n                            detailsForForm={this.state.detailsForForm}\r\n                            handleBookings={this.handleBookings}\r\n                            status={this.modalStatus()}\r\n                            rooms={this.state.rooms}\r\n                            onClose={this.closeModalHandler}\r\n                            notify={(notification, message) => this.props.notify(notification, message)} />\r\n                    </Modal> : null}\r\n                </div> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Grid;","import React, { Component } from 'react';\r\nimport HeaderNavbar from '../Navbar/Navbar';\r\nimport Grid from '../Grid/Grid';\r\nimport './MainContainer.css';\r\nimport { types, notificationTimeOut } from '../../constants/notification';\r\n\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\n\r\nconst notify = (type, message) => {\r\n    switch (type) {\r\n        case types.SUCCESS:\r\n            NotificationManager.success(message, \"\", notificationTimeOut);\r\n            break;\r\n        case types.ERROR:\r\n            NotificationManager.error(message, \"\", notificationTimeOut);\r\n            break;\r\n        case types.WARNING:\r\n            NotificationManager.warning(message, \"\", notificationTimeOut);\r\n            break;\r\n        case types.INFO:\r\n            NotificationManager.info(message, \"\", notificationTimeOut);\r\n            break;\r\n        default:\r\n            NotificationManager.info(message, \"\", notificationTimeOut);\r\n    }\r\n}\r\n\r\nexport default class componentName extends Component {\r\n    state = {\r\n        refresh: false\r\n    }\r\n\r\n    refreshTrueHadler = () => {\r\n        this.setState({ refresh: true });\r\n    }\r\n\r\n    refreshFalseHadler = () => {\r\n        this.setState({ refresh: false });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ height: '100%' }}>\r\n                <NotificationContainer />\r\n                <HeaderNavbar refreshTrueHadler={this.refreshTrueHadler}></HeaderNavbar>\r\n                <Grid notify={(notification, message) => notify(notification, message)} refresh={this.state.refresh} refreshFalseHadler={this.refreshFalseHadler} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n// const mainContainer = (props) => {\r\n\r\n// }\r\n\r\n// export default mainContainer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport MainContainer from './components/MainContainer/MainContainer';\r\n\r\nReactDOM.render(<MainContainer />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}